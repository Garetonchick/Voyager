{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  // Check if we already have a log in inventory\n  const logTypes = [\"oak_log\", \"birch_log\"];\n  for (const logType of logTypes) {\n    if (bot.inventory.items().some(item => item.name === logType)) {\n      bot.chat(\"Already have a wood log in inventory\");\n      return;\n    }\n  }\n\n  // Function to find and mine a log\n  const findAndMineLog = async () => {\n    for (const logType of logTypes) {\n      const logBlock = bot.findBlock({\n        matching: mcData.blocksByName[logType]?.id,\n        maxDistance: 32\n      });\n      if (logBlock) {\n        try {\n          await mineBlock(bot, logType, 1);\n          bot.chat(`Mined 1 ${logType}`);\n          return true;\n        } catch (err) {\n          bot.chat(`Failed to mine ${logType}, trying another`);\n        }\n      }\n    }\n    return false;\n  };\n\n  // Try to find and mine nearby logs first\n  if (await findAndMineLog()) return;\n\n  // If no logs nearby, explore to find some\n  const randomDirection = new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1);\n  const foundLog = await exploreUntil(bot, randomDirection, 60, async () => {\n    return await findAndMineLog();\n  });\n  if (!foundLog) {\n    bot.chat(\"Could not find any wood logs nearby\");\n  }\n}", "description": "async function mineWoodLog(bot) {\n    // The function is about finding and mining one wood log of either oak or birch type. First check if a wood log already exists in the inventory. If not, search nearby for oak or birch logs and mine one if found. If no logs are nearby, explore the environment in a random direction to find and mine a log. If no logs are found after exploring, indicate the failure.\n}"}, "mineBirchLogs": {"code": "async function mineBirchLogs(bot) {\n  // Check current birch_log count\n  const birchLogs = bot.inventory.items().filter(item => item.name === 'birch_log').length;\n  if (birchLogs >= 4) {\n    bot.chat(\"Already have enough birch logs\");\n    return;\n  }\n  const needed = 4 - birchLogs;\n  bot.chat(`Need to mine ${needed} more birch logs`);\n\n  // Function to find and mine birch logs\n  const findAndMineBirchLog = async () => {\n    const birchLogBlock = bot.findBlock({\n      matching: mcData.blocksByName[\"birch_log\"].id,\n      maxDistance: 32\n    });\n    if (birchLogBlock) {\n      try {\n        await mineBlock(bot, \"birch_log\", 1);\n        bot.chat(\"Mined 1 birch_log\");\n        return true;\n      } catch (err) {\n        bot.chat(\"Failed to mine birch_log, trying another\");\n      }\n    }\n    return false;\n  };\n\n  // Try to mine needed logs\n  let mined = 0;\n  while (mined < needed) {\n    if (await findAndMineBirchLog()) {\n      mined++;\n      continue;\n    }\n\n    // If no logs nearby, explore to find some\n    const randomDirection = new Vec3(Math.floor(Math.random() * 3) - 1, 0, Math.floor(Math.random() * 3) - 1);\n    const foundLog = await exploreUntil(bot, randomDirection, 60, async () => {\n      return await findAndMineBirchLog();\n    });\n    if (!foundLog) {\n      bot.chat(\"Could not find any birch logs nearby\");\n      break;\n    }\n    mined++;\n  }\n  if (mined >= needed) {\n    bot.chat(\"Successfully mined 4 birch logs\");\n  } else {\n    bot.chat(`Only mined ${birchLogs + mined} birch logs, need ${4 - (birchLogs + mined)} more`);\n  }\n}", "description": "async function mineBirchLogs(bot) {\n    // The function is about collecting 4 birch logs by first checking the inventory for existing logs, then mining any nearby birch logs, and exploring the area if none are found nearby until the required amount is obtained.\n}"}, "mineCopperOre": {"code": "async function mineCopperOre(bot) {\n  // Check if we already have copper ore\n  if (bot.inventory.items().some(item => item.name === 'copper_ore')) {\n    bot.chat(\"Already have copper ore\");\n    return;\n  }\n\n  // Check if we have stone pickaxe\n  if (!bot.inventory.items().some(item => item.name === 'stone_pickaxe')) {\n    bot.chat(\"Need to craft stone pickaxe first\");\n\n    // Place crafting table if we have one\n    if (bot.inventory.items().some(item => item.name === 'crafting_table')) {\n      const position = bot.entity.position.offset(1, 0, 0);\n      bot.chat(\"Placing crafting table\");\n      await placeItem(bot, \"crafting_table\", position);\n    } else {\n      bot.chat(\"No crafting table available\");\n      return;\n    }\n\n    // Check cobblestone count\n    const cobblestoneCount = bot.inventory.items().filter(item => item.name === 'cobblestone').length;\n    if (cobblestoneCount < 3) {\n      bot.chat(\"Need to mine 3 cobblestone\");\n      await mineBlock(bot, \"stone\", 3);\n    }\n\n    // Craft stone pickaxe\n    bot.chat(\"Crafting stone pickaxe\");\n    await craftItem(bot, \"stone_pickaxe\", 1);\n  }\n\n  // Mine copper ore\n  bot.chat(\"Mining copper ore\");\n  await mineBlock(bot, \"copper_ore\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'copper_ore')) {\n    bot.chat(\"Successfully mined copper ore\");\n  } else {\n    bot.chat(\"Failed to mine copper ore\");\n  }\n}", "description": "async function mineCopperOre(bot) {\n    // The function is about mining copper ore by first ensuring a stone pickaxe is available, crafting one if needed using cobblestone and a crafting table, then locating and mining a copper ore block.\n}"}, "mineCoalOre": {"code": "async function mineCoalOre(bot) {\n  // Check if we already have coal (just for logging)\n  if (bot.inventory.items().some(item => item.name === 'coal')) {\n    bot.chat(\"Already have some coal, mining 1 more\");\n  }\n\n  // Mine 1 coal_ore\n  bot.chat(\"Mining coal ore\");\n  await mineBlock(bot, \"coal_ore\", 1);\n\n  // Verify we have at least 1 coal\n  const hasCoal = bot.inventory.items().some(item => item.name === 'coal');\n  if (hasCoal) {\n    bot.chat(\"Successfully mined coal\");\n  } else {\n    bot.chat(\"Failed to mine coal\");\n  }\n}", "description": "async function mineCoalOre(bot) {\n    // The function is about mining 1 coal ore block and checking if coal is obtained in the inventory. If coal is already present, it logs a message. It then attempts to mine a coal ore block. After mining, it verifies if coal was successfully obtained and logs the result.\n}"}, "mineIronOre": {"code": "async function mineIronOre(bot) {\n  // Check if we already have iron_ore or raw_iron\n  if (bot.inventory.items().some(item => item.name === 'iron_ore')) {\n    bot.chat(\"Already have iron_ore\");\n    return;\n  }\n  if (bot.inventory.items().some(item => item.name === 'raw_iron')) {\n    bot.chat(\"Already have raw_iron from iron_ore\");\n  }\n\n  // Mine 1 iron_ore\n  bot.chat(\"Mining iron_ore\");\n  await mineBlock(bot, \"iron_ore\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'raw_iron')) {\n    bot.chat(\"Successfully mined iron_ore and got raw_iron\");\n  } else {\n    bot.chat(\"Failed to mine iron_ore\");\n  }\n}", "description": "async function mineIronOre(bot) {\n    // The function is about mining iron ore and checking if raw iron is obtained. First, it checks if iron ore or raw iron already exists in the inventory. If not, it mines one iron ore block. Finally, it verifies whether raw iron was successfully obtained from the mined iron ore.\n}"}, "smeltCopperOre": {"code": "async function smeltCopperOre(bot) {\n  // Check if we already have copper ingot\n  if (bot.inventory.items().some(item => item.name === 'copper_ingot')) {\n    bot.chat(\"Already have copper ingot\");\n    return;\n  }\n\n  // Check if we have raw_copper\n  if (!bot.inventory.items().some(item => item.name === 'raw_copper')) {\n    bot.chat(\"No raw_copper available\");\n    return;\n  }\n\n  // Check if we have a furnace\n  if (!bot.inventory.items().some(item => item.name === 'furnace')) {\n    bot.chat(\"Need to craft a furnace\");\n    // Check cobblestone count\n    if (bot.inventory.items().filter(item => item.name === 'cobblestone').length < 8) {\n      bot.chat(\"Need to mine more cobblestone\");\n      await mineBlock(bot, \"stone\", 8);\n    }\n    // Place crafting table if not already placed\n    const craftingTableBlock = bot.findBlock({\n      matching: mcData.blocksByName.crafting_table.id,\n      maxDistance: 32\n    });\n    if (!craftingTableBlock) {\n      bot.chat(\"Placing crafting table\");\n      await placeItem(bot, \"crafting_table\", bot.entity.position.offset(1, 0, 0));\n    }\n    // Craft furnace\n    bot.chat(\"Crafting furnace\");\n    await craftItem(bot, \"furnace\", 1);\n  }\n\n  // Place furnace\n  bot.chat(\"Placing furnace\");\n  await placeItem(bot, \"furnace\", bot.entity.position.offset(1, 0, 0));\n\n  // Smelt raw_copper\n  bot.chat(\"Smelting raw_copper into copper_ingot\");\n  await smeltItem(bot, \"raw_copper\", \"coal\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'copper_ingot')) {\n    bot.chat(\"Successfully smelted copper_ingot\");\n  } else {\n    bot.chat(\"Failed to smelt copper_ingot\");\n  }\n}", "description": "async function smeltCopperOre(bot) {\n    // The function is about smelting raw copper into copper ingots using a furnace. First check if there are already copper ingots in the inventory. If not, check for raw copper and a furnace. If no furnace is available, gather cobblestone and craft one. Place the furnace and use it to smelt the raw copper into copper ingots. Finally, verify if the smelting was successful.\n}"}, "mineLapisOre": {"code": "async function mineLapisOre(bot) {\n  // Check if we already have lapis lazuli\n  if (bot.inventory.items().some(item => item.name === 'lapis_lazuli')) {\n    bot.chat(\"Already have lapis lazuli\");\n    return;\n  }\n\n  // Mine 1 lapis_ore\n  bot.chat(\"Mining lapis ore\");\n  await mineBlock(bot, \"lapis_ore\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'lapis_lazuli')) {\n    bot.chat(\"Successfully mined lapis ore and got lapis lazuli\");\n  } else {\n    bot.chat(\"Failed to mine lapis ore\");\n  }\n}", "description": "async function mineLapisOre(bot) {\n    // The function is about mining lapis ore to obtain lapis lazuli. First check if lapis lazuli is already in the inventory. If not, mine one lapis ore block. Finally, verify if lapis lazuli was successfully obtained.\n}"}, "smeltRawIron": {"code": "async function smeltRawIron(bot) {\n  // Check required items\n  if (!bot.inventory.items().some(item => item.name === 'raw_iron')) {\n    bot.chat(\"No raw_iron available\");\n    return;\n  }\n  if (!bot.inventory.items().some(item => item.name === 'furnace')) {\n    bot.chat(\"No furnace available\");\n    return;\n  }\n  if (!bot.inventory.items().some(item => item.name === 'coal')) {\n    bot.chat(\"No coal available for fuel\");\n    return;\n  }\n\n  // Place furnace\n  bot.chat(\"Placing furnace...\");\n  await placeItem(bot, \"furnace\", bot.entity.position.offset(1, 0, 0));\n\n  // Smelt raw_iron\n  bot.chat(\"Smelting raw_iron into iron_ingot...\");\n  await smeltItem(bot, \"raw_iron\", \"coal\", 1);\n\n  // Verify result\n  if (bot.inventory.items().some(item => item.name === 'iron_ingot')) {\n    bot.chat(\"Successfully smelted iron_ingot!\");\n  } else {\n    bot.chat(\"Failed to smelt iron_ingot\");\n  }\n}", "description": "async function smeltRawIron(bot) {\n    // The function is about smelting raw iron into iron ingots using a furnace and coal as fuel. First check if raw iron, a furnace, and coal are available in the inventory. If all items are present, place the furnace nearby. Then use the furnace to smelt the raw iron with coal as fuel to produce iron ingots. Finally, verify if the smelting process was successful by checking for iron ingots in the inventory.\n}"}, "smeltRawCopper": {"code": "async function smeltRawCopper(bot) {\n  // Check if we have raw_copper\n  if (!bot.inventory.items().some(item => item.name === 'raw_copper')) {\n    bot.chat(\"No raw_copper available\");\n    return;\n  }\n\n  // Check if we have fuel (coal)\n  if (!bot.inventory.items().some(item => item.name === 'coal')) {\n    bot.chat(\"No coal available for fuel\");\n    return;\n  }\n\n  // Check if we have furnace\n  if (!bot.inventory.items().some(item => item.name === 'furnace')) {\n    bot.chat(\"No furnace available\");\n    return;\n  }\n\n  // Place furnace\n  bot.chat(\"Placing furnace\");\n  await placeItem(bot, \"furnace\", bot.entity.position.offset(1, 0, 0));\n\n  // Smelt raw_copper\n  bot.chat(\"Smelting raw_copper into copper_ingot\");\n  await smeltItem(bot, \"raw_copper\", \"coal\", 1);\n\n  // Verify\n  const copperIngotCount = bot.inventory.items().filter(item => item.name === 'copper_ingot').length;\n  if (copperIngotCount > 1) {\n    bot.chat(`Successfully smelted copper_ingot. Now have ${copperIngotCount} copper_ingots`);\n  } else {\n    bot.chat(\"Failed to smelt copper_ingot\");\n  }\n}", "description": "async function smeltRawCopper(bot) {\n    // The function is about smelting raw copper into copper ingots using a furnace and coal as fuel. First check if raw copper, coal, and a furnace are available in the inventory. If all required items are present, place the furnace nearby. Then smelt the raw copper using coal as fuel to produce copper ingots. Finally, verify if the smelting was successful by checking the inventory for copper ingots.\n}"}, "mineIronOreForTwo": {"code": "async function mineIronOreForTwo(bot) {\n  // Check current inventory\n  const rawIronCount = bot.inventory.items().filter(item => item.name === 'raw_iron').length;\n  if (rawIronCount >= 2) {\n    bot.chat(\"Already have at least 2 raw_iron\");\n    return;\n  }\n\n  // Calculate how many more we need to mine (1 since we have 1 already)\n  const needed = 2 - rawIronCount;\n  bot.chat(`Need to mine ${needed} more iron_ore`);\n\n  // Explore until finding iron_ore\n  const ironOre = await exploreUntil(bot, new Vec3(0, -1, 0), 60, () => {\n    return bot.findBlock({\n      matching: mcData.blocksByName[\"iron_ore\"].id,\n      maxDistance: 32\n    });\n  });\n  if (!ironOre) {\n    bot.chat(\"Could not find iron_ore within 60 seconds\");\n    return;\n  }\n\n  // Mine the iron_ore\n  await mineBlock(bot, \"iron_ore\", needed);\n\n  // Verify final count\n  const finalCount = bot.inventory.items().filter(item => item.name === 'raw_iron').length;\n  if (finalCount >= 2) {\n    bot.chat(`Successfully mined ${needed} iron_ore and now have ${finalCount} raw_iron`);\n  } else {\n    bot.chat(`Failed to get 2 raw_iron - only have ${finalCount}`);\n  }\n}", "description": "async function mineIronOreForTwo(bot) {\n    // The function is about mining iron ore to obtain at least 2 raw iron. First check the inventory for existing raw iron. If not enough, explore to find iron ore blocks. Once found, mine the required number of iron ore blocks to reach the target of 2 raw iron. Finally verify the inventory count of raw iron.\n}"}, "craftIronSword": {"code": "async function craftIronSword(bot) {\n  // Check if we already have an iron sword\n  if (bot.inventory.items().some(item => item.name === 'iron_sword')) {\n    bot.chat(\"Already have an iron sword\");\n    return;\n  }\n\n  // Place crafting table\n  bot.chat(\"Placing crafting table\");\n  await placeItem(bot, \"crafting_table\", bot.entity.position.offset(1, 0, 0));\n\n  // Craft iron sword\n  bot.chat(\"Crafting iron sword\");\n  await craftItem(bot, \"iron_sword\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'iron_sword')) {\n    bot.chat(\"Successfully crafted iron sword!\");\n  } else {\n    bot.chat(\"Failed to craft iron sword\");\n  }\n}", "description": "async function craftIronSword(bot) {\n    // The function is about crafting an iron sword using a crafting table. First check if an iron sword already exists in the inventory. If not, place a crafting table nearby. Then craft an iron sword using the crafting table. Finally, verify whether the iron sword was successfully crafted.\n}"}, "craftIronPickaxe": {"code": "async function craftIronPickaxe(bot) {\n  // Check if we already have an iron pickaxe\n  if (bot.inventory.items().some(item => item.name === 'iron_pickaxe')) {\n    bot.chat(\"Already have an iron pickaxe\");\n    return;\n  }\n\n  // Check materials needed\n  const ironIngotsNeeded = 3 - bot.inventory.items().filter(item => item.name === 'iron_ingot').length;\n  const sticksNeeded = 2 - bot.inventory.items().filter(item => item.name === 'stick').length;\n\n  // Get missing iron ingots\n  if (ironIngotsNeeded > 0) {\n    bot.chat(`Need ${ironIngotsNeeded} more iron ingots`);\n\n    // Mine iron ore\n    await mineBlock(bot, \"iron_ore\", ironIngotsNeeded);\n\n    // Place furnace if we don't have one placed\n    if (!bot.findBlock({\n      matching: mcData.blocksByName.furnace.id,\n      maxDistance: 32\n    })) {\n      await placeItem(bot, \"furnace\", bot.entity.position.offset(1, 0, 0));\n    }\n\n    // Smelt raw iron\n    await smeltItem(bot, \"raw_iron\", \"coal\", ironIngotsNeeded);\n  }\n\n  // Get missing sticks\n  if (sticksNeeded > 0) {\n    bot.chat(`Need ${sticksNeeded} more sticks`);\n\n    // Place crafting table if we don't have one placed\n    if (!bot.findBlock({\n      matching: mcData.blocksByName.crafting_table.id,\n      maxDistance: 32\n    })) {\n      await placeItem(bot, \"crafting_table\", bot.entity.position.offset(1, 0, 0));\n    }\n\n    // Craft sticks from planks\n    await craftItem(bot, \"stick\", Math.ceil(sticksNeeded / 4));\n  }\n\n  // Now craft the iron pickaxe\n  bot.chat(\"Crafting iron pickaxe\");\n  await craftItem(bot, \"iron_pickaxe\", 1);\n\n  // Verify\n  if (bot.inventory.items().some(item => item.name === 'iron_pickaxe')) {\n    bot.chat(\"Successfully crafted iron pickaxe!\");\n  } else {\n    bot.chat(\"Failed to craft iron pickaxe\");\n  }\n}", "description": "async function craftIronPickaxe(bot) {\n    // The function crafts an iron pickaxe by first checking for required materials, then mining and smelting iron ore if needed, crafting sticks from planks if necessary, and finally combining the materials to create the pickaxe.\n}"}}